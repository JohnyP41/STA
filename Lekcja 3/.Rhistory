setwd("j:/Desktop/Statystyka/Lekcja 3")
#b
b=sum((szybkosc^2)/25)
szybkosc<-c(0.9,6.2, 2.1 ,4.1, 7.3,1.0, 4.6 ,6.4 ,3.8 ,5.0,2.7, 9.2, 5.9, 7.4 ,3.0, 4.9, 8.2 ,5.0, 1.2 ,10.1,12.2, 2.8, 5.9 ,8.2, 0.5)
#a
#b
b=sum((szybkosc^2)/25)
par.lambda <- function(x) {
b<-sum((x^2)/25)
return(b)
}
par.lambda(x)
x<-szybkosc
par.lambda(x)
#b
b=sum((szybkosc^2)/25)
p<-par.lambda(x)
par.lambda(x)
x.size()
x.lenghts()
par.lambda <- function(x) {
b<-sum((x^2)/length(x))
return(b)
}
#wywolanie
x<-szybkosc
x.lenghts()
par.lambda(x)
par.b <- function(x,y) {
b<-sum(y,x)/x^2
return(b)
}
#wywolanie
x <- c(1, 2, 3)
y <- c(4, 5, 6)
par.b(x, y)
p<-par.b(x, y)
par.b(x, y)
par.b <- function(x,y) {
b<-sum(y,x)/(x^2)
return(b)
}
#wywolanie
x <- c(1, 2, 3)
y <- c(4, 5, 6)
par.b(x, y)
par.b <- function(x,y) {
b<-sum(y,x)/sum(x^2)
return(b)
}
#wywolanie
x <- c(1, 2, 3)
y <- c(4, 5, 6)
par.b(x, y)
par.b(x, y)
par.b <- function(x,y) {
b<-sum(y*x)/sum(x*x)
return(b)
}
#wywolanie
x <- c(1, 2, 3)
y <- c(4, 5, 6)
par.b(x, y)
#Zadanie 3
plot(cars)
#a
model <- lm(dist ~ speed, data = cars)
abline(model, col = "black")
#b
summary(model)
#b
summary(model)
nowy <- data.frame(speed = 30:50)
predict(model, nowy)
#Zadanie 4
#a
model <- lm(Employed~GNP.deflator+GNP+Unemployed+Armed.Forces+Population+Year, data = longley)
#b
summary(model)
x <- c(1, 2, 3)
y <- c(4, 5, 6)
par.b(x, y)
